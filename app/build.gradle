apply plugin: 'com.android.application'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'com.vanniktech.android.apk.size'

def ignoredMappers = [
//        'jmapper',      //couldn't dex
//        'smooks',       //broken dependency
//        'dozer',        //runtime error
//        'geda',         //runtime error
//        'moo',          //runtime error
//        'orika',        //runtime error
//        'nomin',        //runtime error
//        'modelMapper'   //runtime error
]

android {
    compileSdkVersion 26

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    defaultConfig {
        applicationId "com.devindi.mapper.demo"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "mapper"

    productFlavors {

        manual {
            dimension "mapper"
        }

        beanUtils {
            dimension "mapper"
        }

        spring {
            dimension "mapper"
        }

        transmorph {
            dimension "mapper"
        }

        ezmorph {
            dimension "mapper"
        }

        morph {
            dimension "mapper"
        }

        dozer {
            dimension "mapper"
        }

        jmapper {
            dimension "mapper"
        }

        merger {
            dimension "mapper"
        }

        geda {
            dimension "mapper"
        }

        beanMapper {
            dimension "mapper"
        }

        mapStruct {
            dimension "mapper"
        }

        moo {
            dimension "mapper"
        }

        smooks {
            dimension "mapper"
        }

        orika {
            dimension "mapper"
        }

        nomin {
            dimension "mapper"
        }

        modelMapper {
            dimension "mapper"
        }
    }

    variantFilter {
        variant ->
            def names = variant.flavors*.name
            def isIgnored = names.any { ignoredMappers.contains( it ) } || variant.buildType.name == "release"
            if (isIgnored) {
                variant.setIgnore(isIgnored)
            }
    }

    // open test reports in browser with next command:
    // ./gradlew clean test | grep "Test report" | cut -c 13- | xargs open
    // where 13 is length of "Test report " + 1
    tasks.withType(Test) { testTask ->
        println testTask.name

        afterSuite { desc, result ->
            if (desc.parent) return

            println "Test report ${testTask.reports.html.entryPoint}"
        }
    }
}

dependencies {

    beanUtilsImplementation project(':beans-lib')
    beanUtilsImplementation ('commons-beanutils:commons-beanutils:1.9.3') {
        exclude group: 'commons-logging', module: 'commons-logging'
    }

    springImplementation ('org.springframework:spring-core:4.3.12.RELEASE') {
        exclude group: 'commons-logging', module: 'commons-logging'
    }

    transmorphImplementation 'net.sf.transmorph:transmorph:3.1.3'

    ezmorphImplementation project(':beans-lib')
    ezmorphImplementation ('org.kordamp.ezmorph:ezmorph:2.0.0') {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'junit', module: 'junit'
    }

    morphImplementation project(':beans-lib')
    morphImplementation ('net.sf.morph:morph:1.1.1') {
        exclude group: 'commons-logging', module: 'commons-logging'
    }

    beanMapperImplementation project(':beans-lib')
    beanMapperImplementation files('libs/jbeanmapper-1.1.jar')
    beanMapperImplementation ('commons-digester:commons-digester:1.5') {
        exclude group: 'commons-logging', module: 'commons-logging'
    }

    dozerImplementation 'net.sf.dozer:dozer:5.5.1'

    jmapperImplementation 'com.googlecode.jmapper-framework:jmapper-core:1.6.0'

    mergerImplementation project(':beans-lib')
    mergerImplementation ('net.sf.brunneng.jom:java-object-merger:0.8.5.1') {
        exclude group: 'commons-logging', module: 'commons-logging'
    }

    gedaImplementation 'com.inspire-software.lib.dto.geda:geda.core:3.1.1'
    gedaImplementation 'org.slf4j:slf4j-log4j12:1.7.25'

    mapStructImplementation 'org.mapstruct:mapstruct-jdk8:1.2.0.Final'
    mapStructAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.2.0.Final'

    mooImplementation 'com.codiform:moo-core:2.0'

    smooksImplementation 'org.milyn:milyn-smooks-all:1.7.1'

    orikaImplementation 'ma.glasnost.orika:orika-core:1.5.2'

    nominImplementation project(':beans-lib')
    nominImplementation 'net.sf.nomin:nomin:1.1.3'

    modelMapperImplementation 'org.modelmapper:modelmapper:1.1.2'

    testImplementation 'junit:junit:4.12'
//    testImplementation 'commons-logging:commons-logging:1.2'

    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support:support-annotations:25.3.1'
}

project.gradle.taskGraph.whenReady {
    project.tasks.each {
        if (it.hasProperty("ignoreFailures")) {
            it.ignoreFailures = true
        }
    }
}
